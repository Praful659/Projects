x = 20202
length(x)
class(x)
x = 'sds'
class(x)
rm(x)
class(x)
x,y = 5,10
x = y = 5
x = TRUE
calss(x)
class(x)
x = Jan 1, 1970
x = Jan 1, 1970
x = y = 5
is.numeric(x)
paste(date())
paste("Today is", date())
toupper(x)
x = paste("Today is", date())
toupper(x)
## convert numeric to charater data type
as.character(y)
## convert numeric to charater data type
is.character(as.character(y))
## convert numeric to charater data type
y = 5
is.character(as.character(y))
y <- ("data" > "stats")
y
y <- ("data" > "Data")
y
######################  R Introduction ######################
rm(list=ls())   # clear the workspace
cat("\014")     # clear the console
cat("\014")     # clear the console
# (1) R Packages #
# install the package ggplot2
install.packages("ggplot2")
# load the package to the current workspace
library("ggplot2")
# unload/detach the package from the current workspace
detach("ggplot2")
# unload/detach the package from the current workspace
detach("package:ggplot2")
# load the package to the current workspace
library("ggplot2")
# modulus (x mod y) -> get residual
5 %% 2
5 %/% 2
# (3) R Variable / Object #
# assign the value 3 to an variable named x
x = 3
# show the content of the variable x
x
# show the length of the variable x
length(x)
# show the type of the variable x
class(x)
# assign an expression to a variable
y = "Hello world"
?cat
# Concatenate and Print
cat("x=", x, "y=", sep =",")
# Concatenate and Print
cat("x=", x, "y=",y , sep =",")
# Concatenate and Print
cat("x=", x, "y=",y , sep =", ")
# Concatenate and Print
cat("x=", x, "y=",y , sep =" ")
# show the type of the variable x
class(x)
# (4.3) dates: the default format is yyyy-mm-dd #
# two-digit year conversion
date()
# Negative number of days before 1970-1-1
date(Y%-%m-%d)
# Negative number of days before 1970-1-1
y = as.date("23-01-25, format = Y%-%m-%d)
y
y
# (4.4) logical #
# is 2 less than or equal to 3?
is ( 2 < 3)
# (4.4) logical #
# is 2 less than or equal to 3?
2 < 3
# (4.4) logical #
# is 2 less than or equal to 3?
x = 2 < 3
# internally FALSE = 0, TRUE = 1
x
# internally FALSE = 0, TRUE = 1
x
# (4.4) logical #
# is 2 less than or equal to 3?
x = (2 < 3)
# internally FALSE = 0, TRUE = 1
x
x <- (2 < 3)
# internally FALSE = 0, TRUE = 1
x
v1 = c(5)
# (5.2) create a sequence containing integers from 1 to 10
v1
# (5) Vector #
# (5.1) create a vector
2 + 5
2 + 5
# what about data < stats?
2+5
2 + 2
>2+2
>2+2
2+2
# (5.4) vector operation #
# create a vector containing integers from 1 to 10
x = 1:10
# check if each element in x is smaller than or equal to 5
x <= 5
# numeric operation
sqrt(x)
# modulus
x %% 2
# integer division
y = 10:1
z = x / y
z = x / y
z = x/y
x/y
z = x/y
z
w = x^y
w
# (5.5) operation between vectors of equal length #
# create two vectors of equal length
x = 1:10
y = 10:1
# raise one to the power of the other
z= x ^ y
z
# (5.7) vector indexing by element position #
y = 1:10
y[1:2]
y[2:2]
y[-1]
y[::-1]
y[:::]
y[:-1]
y[::1]
y[::]
y[::1]
y[:-1]
y[-1]
dbinom(6,10,0.45)
pbinom(6,10,0.45)
dpois(3,10)
dpois(3,1)
ppois(3,1)
1-pois(2,1)
1-ppois(2,1)
1-ppois(1,1.2)
ppois(2,1.2)
ppois(1,1.2)
ppois(1,1.2)
dpois(1,1.2)
dpois(3,2)
#uniform Distribution
punif(3000,2000,5000) - punif(2500,2000,5000)
#punif(X>1800)
punif(1300,2000,5000, lower.tail = F)
#punif(X>2800)
punif(2800,2000,5000, lower.tail = F)
punif(2,0.66,3) - punif(1,0.66,3)
punif(1,0.66,3)
punif(1,0.66,3, lower.tail = F)
punif(120,40,180) - punif(60,40,180)
punif(60,40,180)
punif(60,40,180, lower.tail = F)
punif(120,40,180, lower.tail = F)
puni80f(2,0.66,3, lower.tail = F)
punif(2,0.66,3, lower.tail = F)
mydata = data.frame(x,y)
x = c(20,40,60,50,50,55,60,70)
y = c(14,16,18,17,18,18,18,20)
mydata = data.frame(x,y)
plot(mydata)
mean(mydata)
mean(x)
quantile(x)
quantile(x , prop = c(0.75,0.25))
cor(mydata)
cor.test(mydata)
cor(mydata)
mat1 = matrix(x, nrow = 2, ncol = 3, byrow = T)
pbinom(4,10)
pbinom(4,100,90)
pbinom(4,90,100)
x = c(0.12 ,0.42 ,0.06 ,0.6 ,0.21 ,0.06 ,0.03 ,0.3 ,0.07, 0.02, 0.01 )
mat1 = matrix(x, nrow = 2, ncol = 3, byrow = TRUE)
x = c(0.12 ,0.42 ,0.06, 0.21 ,0.06 ,0.03, 0.07, 0.02, 0.01 )
mat1 = matrix(x, nrow = 3, ncol = 3, byrow = TRUE)
mean(mat1)
cov(mat1)
sum(cov(mat1))
x = c(0.4,0.5,0.1)
y = c(0.6,0.3,0.1)
cov(x,y)
mat1 = matrix(278,127,102,290,111,102, nrow = 2, ncol = 3, byrow = TRUE)
mat4 = matrix(278,127,102,290,111,102, nrow = 2, ncol = 3, byrow = TRUE)
mat4 = matrix(c(278,127,102,290,111,102), nrow = 2, ncol = 3, byrow = TRUE)
mat4
addmargins(mat4)
prop.table(mat4)
prop.table(mat4) %>%
prop.table(mat4) %>%
margin(2)
import("dylpr")
library("dylpr")
library("dplyr")
prop.table(mat4) %>%
margin(2)
prop.table(mat4) %>%
margin = 2
prop.table(mat4) %>%
margin = 2
prop.table(mat4) %<%
margin = 2
prop.table(mat4) %>%
margin=2
prop.table(mat4) %<%
margin=2
prop.table(mat4) %>%
margin=2
library("dplyr")
prop.table(mat4) %>%
margin=2
mat4 = matrix(c(278,127,102,290,111,102), nrow = 2, ncol = 3, byrow = TRUE)
mat4
addmargins(mat4)
library("dplyr")
prop.table(mat4) %>%
margin=2
prop.table(mat4) %>%
margin(2)
prop.table(mat4) %>%
prop.table(margin = 2)
library("dplyr")
prop.table(mat4) %>%
prop.table(margin = 2) %>%
round = 2
library("dplyr")
prop.table(mat4) %>%
prop.table(margin = 2) %>%
round(2)
addmargins(prop.table(mat4)) %>%
prop.table(margin = 2) %>%
round(2)
y = sum(x)
y = sum(x)
x = c(12,2,3,12,5,23,32,54,66,22,55,22)
y = sum(x)
y
x = c(12,2,3,12,5,23,32,54,66,22,55,22)
y = matrix(x, nrow = 12, ncol = 1)
y
z = y/sum(y)
cbind(y,z)
addmargins(cbind(y,z))
addmargins(x,cbind(y,z))
addmargins(cbind(y,z)) %>%
round(4)
source("~/.active-rstudio-document", echo=TRUE)
library("dylpr")
library("dplyr")
addmargins(cbind(y,z)) %>%
round(4)
y
Y
Y = 15000/(sqrt(100))
Y
qnorm(0.975)
qnorm(0.975)*1500
1- 0.05/2
Y + qnorm(0.975)*1500
Y - qnorm(0.975)*1500
80000 - qnorm(0.975)*1500
80000 + qnorm(0.975)*1500
((1.96*15000)/2500)^2
qnorm(0.92)
qnorm(0.98)
pvalue = 2*pnorm(2.84,lower.tail = F)
pvalue
pnorm(2.84,lower.tail = F)
pnorm(2.84,lower.tail = T)
pnorm(2.84,lower.tail = F)
pvalue = 2*pnorm(2.84,lower.tail = F)
pvalue
Zstat = (22219 - 22000)/(1295/sqrt(100))
pnorm(Zstat,lower.tail = T)
Zstat
pnorm(Zstat,lower.tail = T)
pnorm(Zstat)
pnorm(Zstat,lower.tail = T)
pnorm(Zstat)
pnorm(1.69,lower.tail = F)
setwd("/Users/prafulpatil/SPRING 2023/BUAN 6359 ADV STATS")
#-------------------------------------------------------------------------------
# install.packages('mosaic')  # one-time installation
require(Sleuth3)
require(mosaic)
require(knitr)
#----------A Randomized Experiment: Motivation & Work---------------------------
rm(list=ls())
creativity<- read.csv("creativity.csv")
summary(creativity)
favstat_1<- favstats(Score~Treatment, data=creativity); favstat_1
histogram(~Score|Treatment, data=creativity)
summary(creativity)
favstat_1<- favstats(Score~Treatment, data=creativity); favstat_1
#----------A Randomized Experiment: Motivation & Work---------------------------
library(mosaic)
rm(list=ls())
creativity<- read.csv("creativity.csv")
summary(creativity)
favstat_1<- favstats(Score~Treatment, data=creativity); favstat_1
histogram(~Score|Treatment, data=creativity)
bwplot(Score~Treatment, data=creativity,
main="Boxplot for Writing Score",
cex.lab=1.5) #box-and-whisker Plot
histogram(~Score|Treatment, data=creativity)
bwplot(Score~Treatment, data=creativity,
main="Boxplot for Writing Score",
cex.lab=1.5) #box-and-whisker Plot
1-(0.05/2)
qnorm(0.975)*0.005163
12-qnorm(0.975)*(4/sqrt(60)
qnorm(0.975)*(4/sqrt(60)
qnorm(0.975)
1.959964*(4/sqrt(60)
qnorm(0.975)
1-(0.05/2)
qnorm(0.975)
1.959964*(0.04/sqrt(60))
0.12-0.01012121
0.12+0.01012121
0.12-0.01012121
0.12+0.01012121
#-------------------------------------------------------------------------------
# install.packages('mosaic')  # one-time installation
require(mosaic)
#-------------------------------------------------------------------------------
# install.packages('mosaic')  # one-time installation
require(mosaic)
#-------------------------------------------------------------------------------
rm(list=ls())
#t distribution w/ various d.f. versus the standard normal distribution
z<- seq(-4, 4, 0.01)
y<- dnorm(z)
par(mar=c(5,5,5,2)) #Increase the plot section margin size
plot(z, y, main="t Distribution vs. Standard Normal Distribution",
xlab="t", ylab="f(t)", type="l", lty=2, lwd=2)
t<- seq(-4, 4, 0.01)
lines(t, dt(t, 3), lwd=1.5, col="blue")
lines(t, dt(t, 10), lwd=1.5, col="red")
lines(t, dt(t, 30), lwd=1.5, col="green")
legend("topright",
c("Standard Normal", "t, v=3", "t, v=8", "t, v=30"),
lwd=2, lty=c(2, 1, 1, 1), col=c("black","blue","red","green"))
#-------------------------------------------------------------------------------
install.packages('mosaic')  # one-time installation
install.packages("mosaic")
require(mosaic)
#-------------------------------------------------------------------------------
rm(list=ls())
#t distribution w/ various d.f. versus the standard normal distribution
z<- seq(-4, 4, 0.01)
y<- dnorm(z)
par(mar=c(5,5,5,2)) #Increase the plot section margin size
plot(z, y, main="t Distribution vs. Standard Normal Distribution",
xlab="t", ylab="f(t)", type="l", lty=2, lwd=2)
t<- seq(-4, 4, 0.01)
lines(t, dt(t, 3), lwd=1.5, col="blue")
lines(t, dt(t, 10), lwd=1.5, col="red")
par(mar=c(5,5,5,2)) #Increase the plot section margin size
plot(z, y, main="t Distribution vs. Standard Normal Distribution",
xlab="t", ylab="f(t)", type="l", lty=2, lwd=2)
par(mar=c(5,5,5,2)) #Increase the plot section margin size
plot(z, y, main="t Distribution vs. Standard Normal Distribution",
xlab="t", ylab="f(t)", type="l", lty=2, lwd=2)
t<- seq(-4, 4, 0.01)
lines(t, dt(t, 3), lwd=1.5, col="blue")
lines(t, dt(t, 10), lwd=1.5, col="red")
lines(t, dt(t, 30), lwd=1.5, col="green")
legend("topright",
c("Standard Normal", "t, v=3", "t, v=8", "t, v=30"),
lwd=2, lty=c(2, 1, 1, 1), col=c("black","blue","red","green"))
#------------------
#Finding probability in t distribution
# P(t_45<1.73), v=45
pt(1.73, 45)
# P(t_45>0.0.87), v=45
pt(0.87, 45, lower.tail = F)
# Finding critical values in t distribution:
qt(.05, 10, lower.tail=FALSE) #P(t_10 > t.c) = 0.05; t_10?
qt(.10, 30)                   #P(t_30 < t.c) = 0.10; t_30?
age=c(86,	75,	83,	84,	81,	77,	78,	79,	79,	81,
76,	85,	70,	76,	79,	81,	73,	74,	72,	83)
bwplot(~age,
main="Boxplot for Clients' Age",
cex.lab=1.5) #box-and-whisker Plot
densityplot(age, xlab = "Age")
#----------------------------------------
age.bar = mean(age); age.bar
sd.age = sd(age);sd.age
n=20
t.ratio = (age.bar - mu)/(sd.age/sqrt(n)); t.ratio
p.value = pt(abs(t.ratio), n-1, lower.tail = F); p.value
# Command Approach
t.test(age, mu=77, conf.level = 0.95, alternative="two.side")
#------------------
#Finding probability in t distribution
# P(t_45<1.73), v=45
pt(1.73, 45)
# P(t_45>0.0.87), v=45
pt(0.87, 45, lower.tail = F)
# Finding critical values in t distribution:
qt(.05, 10, lower.tail=FALSE) #P(t_10 > t.c) = 0.05; t_10?
qt(.10, 30)                   #P(t_30 < t.c) = 0.10; t_30?
qt(.90, 30)                   #P(t_30 < t.c) = 0.10; t_30?
source("~/SPRING 2023/BUAN 6359 ADV STATS/Lecture09_Making Inferences using t-Distributions.R", echo=TRUE)
qt(0.10, 30)                   #P(t_30 < t.c) = 0.10; t_30?
#7
titanic <- read.csv('titanic.csv')
#8
dim(titanic)
#1
meanAge <- sum(na.omit(titanic$Age))/length(na.omit(titanic$Age))
meanAge
#3
titanic$Age[is.na(titanic$Age)] <- meanAge
titanic$Age <- round(titanic$Age)
#4
titanic$AgeCat[titanic$Age>=0 & titanic$Age<=16] <- "0-16"
titanic$AgeCat[titanic$Age>=17 & titanic$Age<=32] <- "17-32"
setwd("/Users/prafulpatil/SPRING 2023/MIS 6380 DATA VIZ/Assignments/Assignment_07/K mean")
#7
titanic <- read.csv('titanic.csv')
#8
dim(titanic)
#1
meanAge <- sum(na.omit(titanic$Age))/length(na.omit(titanic$Age))
#1
meanAge <- sum(na.omit(titanic$Age))/length(na.omit(titanic$Age))
#1
meanAge <- sum(na.omit(titanic$Age))/length(na.omit(titanic$Age))
meanAge
#3
titanic$Age[is.na(titanic$Age)] <- meanAge
titanic$Age <- round(titanic$Age)
#4
titanic$AgeCat[titanic$Age>=0 & titanic$Age<=16] <- "0-16"
titanic$AgeCat[titanic$Age>=17 & titanic$Age<=32] <- "17-32"
titanic$AgeCat[titanic$Age>=33 & titanic$Age<=48] <- "33-48"
titanic$AgeCat[titanic$Age>=49 & titanic$Age<=64] <- "49-64"
titanic$AgeCat[titanic$Age>=65] <- "65 and Above"
#5
titanic$Survived[titanic$Survived==0] <- "Not Survived"
titanic$Survived[titanic$Survived==1] <- "Survived"
#6
titanic$Pclass <- factor(titanic$Pclass)
titanic$AgeCat <- factor(titanic$AgeCat)
titanic$Survived <- factor(titanic$Survived)
titanic$Embarked <- as.character(titanic$Embarked)
titanic$Embarked[titanic$Embarked=="S"] <- "Southampton"
titanic$Embarked[titanic$Embarked=="C"] <- "Cherbourg"
titanic$Embarked[titanic$Embarked=="Q"] <- "Queenstown"
titanic$Embarked <- factor(titanic$Embarked)
#7
titanic <- titanic[c(-9,-11)]
#8
View(titanic)
write.csv(titanic, file="/Users/prafulpatil/SPRING 2023/MIS 6380 DATA VIZ/Assignments/Assignment_07/K mean/titanicNew.csv")
titanicNew<-read.csv("/Users/prafulpatil/SPRING 2023/MIS 6380 DATA VIZ/Assignments/Assignment_07/K mean/titanicNew.csv")
titanicUpdated<-titanicNew
SurvivedNum<-ifelse(titanicUpdated$Survived=="Not Survived",0,1)
titanicUpdated <-data.frame(titanicUpdated,SurvivedNum)
SexN<-ifelse(titanicUpdated $Sex=="male",1,0)
titanicUpdated <-data.frame(titanicUpdated, SexN)
EmbarkedN<-ifelse(titanicUpdated$Embarked=="Southampton",1,ifelse(titanicUpdated $Embarked=="Cherbourg",2,0))
titanicUpdated <-data.frame(titanicUpdated, EmbarkedN)
write.csv(titanicUpdated,file = "/Users/prafulpatil/SPRING 2023/MIS 6380 DATA VIZ/Assignments/Assignment_07/K mean/titanicUpdated.csv")
#2
titanic.scaled <- scale(data.frame(titanic$Age, titanic$Parch, titanic$SibSp, titanic$Fare))
colnames(titanic.scaled)
totwss <- vector()
btwss <- vector()
for (i in 2:15)
{
set.seed(1234)
temp <- kmeans(titanic.scaled, centers=i)
totwss[i] <- temp$tot.withinss
btwss[i] <- temp$betweenss
}
plot(totwss, xlab = "Number of Cluster", type = "b", ylab = "Total Within Sum of Square")
plot(btwss, xlab = "Number of Cluster", type = "b", ylab = "Total Between Sum of Square")
pkg_url <- "http://cran.r-project.org/bin/macosx/mavericks/contrib/3.1/Rserve_1.7-3.tgz"
install.packages(pkg_url, repos = NULL)
library(Rserve)
Rserve(args="--vanilla")
#8
View(titanic)
